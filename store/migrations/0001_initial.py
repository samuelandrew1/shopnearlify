# Generated by Django 4.2.9 on 2024-10-30 21:40

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("paystack_api", "0001_initial"),
        ("delivery", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Cart",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField(default=1)),
                ("is_ordered", models.BooleanField(default=False)),
                ("is_in_cart", models.BooleanField(default=False)),
                ("cart_id", models.UUIDField(default=uuid.uuid4)),
                ("session_key", models.CharField(blank=True, max_length=40, null=True)),
                ("cancelled", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("slug", models.SlugField(default="")),
                (
                    "img",
                    models.ImageField(
                        blank=True,
                        default="img",
                        null=True,
                        upload_to="static/media/img",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Color",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                (
                    "img",
                    models.ImageField(
                        blank=True,
                        default="img",
                        null=True,
                        upload_to="static/media/img",
                    ),
                ),
                ("stock", models.IntegerField(blank=True, default=1, null=True)),
                ("is_available", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="Coupon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=50)),
                ("amount", models.IntegerField(default=0)),
                ("valid_from", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "valid_to",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                ("active", models.BooleanField(default=True)),
                ("is_used", models.BooleanField(default=False)),
                (
                    "used_by",
                    models.ManyToManyField(
                        blank=True,
                        related_name="used_coupons",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        default="",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CustomersAddress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("street_address", models.CharField(max_length=300)),
                ("apartment", models.CharField(max_length=255)),
                ("town", models.CharField(default="", max_length=50)),
                ("city", models.CharField(default="", max_length=50)),
                ("state", models.CharField(default="", max_length=50)),
                (
                    "telephone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        max_length=128, region="NG"
                    ),
                ),
                ("zip_code", models.CharField(max_length=20)),
                ("country", django_countries.fields.CountryField(max_length=2)),
                ("message", models.TextField(blank=True, max_length=500, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        default="",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="users",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EmailSubscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("date", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Notifications",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                (
                    "date",
                    models.DateTimeField(
                        default=datetime.datetime(2024, 10, 30, 21, 40, 9, 50781)
                    ),
                ),
                ("seen", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_ordered", models.BooleanField(default=False)),
                ("reference", models.CharField(default="", max_length=50)),
                ("is_delivered", models.BooleanField(default=False)),
                ("is_received", models.BooleanField(default=False)),
                ("is_refund_request", models.BooleanField(default=False)),
                ("refund_granted", models.BooleanField(default=False)),
                (
                    "date",
                    models.DateTimeField(
                        default=datetime.datetime(2024, 10, 30, 21, 40, 9, 46672)
                    ),
                ),
                (
                    "delivery_status",
                    models.CharField(
                        choices=[
                            ("processing", "processing"),
                            ("in_progress", "in_progress"),
                            ("delivered", "delivered"),
                        ],
                        default="Processing",
                        max_length=255,
                    ),
                ),
                ("cart_id", models.UUIDField(blank=True, null=True)),
                ("session_key", models.CharField(blank=True, max_length=40, null=True)),
                (
                    "invoice_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("approved", models.BooleanField(default=False)),
                ("user_cancelled", models.BooleanField(default=False)),
                ("deleted", models.BooleanField(default=False)),
                ("cancelled", models.BooleanField(default=False)),
                (
                    "Payment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="paystack_api.payment",
                    ),
                ),
                (
                    "coupon",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="store.coupon",
                    ),
                ),
                (
                    "delivery_location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="delivery.deliverylocations",
                    ),
                ),
                ("product", models.ManyToManyField(to="store.cart")),
                (
                    "shipping_address",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="store.customersaddress",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        default="",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField(max_length=255)),
                ("feature1", models.CharField(blank=True, max_length=255, null=True)),
                ("feature2", models.CharField(blank=True, max_length=255, null=True)),
                ("feature3", models.CharField(blank=True, max_length=255, null=True)),
                ("feature4", models.CharField(blank=True, max_length=255, null=True)),
                ("feature5", models.CharField(blank=True, max_length=255, null=True)),
                ("feature6", models.CharField(blank=True, max_length=255, null=True)),
                ("feature7", models.CharField(blank=True, max_length=255, null=True)),
                ("feature8", models.CharField(blank=True, max_length=255, null=True)),
                ("feature10", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "specification1",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "specification2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "specification3",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "specification4",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "specification5",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "specification6",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "specification7",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "specification8",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "specification9",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "specification10",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "img_1",
                    models.ImageField(
                        blank=True,
                        default="img",
                        null=True,
                        upload_to="static/media/img",
                    ),
                ),
                (
                    "img_2",
                    models.ImageField(
                        blank=True,
                        default="img",
                        null=True,
                        upload_to="static/media/img",
                    ),
                ),
                (
                    "img_3",
                    models.ImageField(
                        blank=True,
                        default="img",
                        null=True,
                        upload_to="static/media/img",
                    ),
                ),
                (
                    "img_4",
                    models.ImageField(
                        blank=True,
                        default="img",
                        null=True,
                        upload_to="static/media/img",
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("label-new", "new"),
                            ("label-out", "out"),
                            ("label-top", "top"),
                            ("label-sale", "sale"),
                        ],
                        default="",
                        max_length=255,
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("Male", "male"), ("Female", "female")],
                        default="female",
                        max_length=10,
                        null=True,
                    ),
                ),
                ("display_on_home_page", models.BooleanField(default=False)),
                ("is_banner", models.BooleanField(default=False)),
                ("is_best_selling", models.BooleanField(default=False)),
                ("slug", models.SlugField(default="eg-product-title", unique=True)),
                ("is_featured", models.BooleanField(default=False)),
                ("is_deal_of_the_day", models.BooleanField(default=False)),
                ("quantity_sold", models.PositiveIntegerField(default=0)),
                ("minimum_order", models.IntegerField(default=1)),
                (
                    "category",
                    models.ForeignKey(
                        default="",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="store.category",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductSizeColor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "color",
                    models.ForeignKey(
                        default="",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="color_product_colors",
                        to="store.color",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_size_colors",
                        to="store.product",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Stock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField()),
                (
                    "product",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="store.product"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Size",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("size", models.CharField(max_length=10, unique=True)),
                ("price", models.IntegerField(blank=True, default=0, null=True)),
                ("discount_price", models.IntegerField(default=0)),
                ("wholesale_price", models.IntegerField(default=0)),
                ("pieces", models.IntegerField(default=0)),
                (
                    "product_colors",
                    models.ManyToManyField(
                        related_name="size_colors",
                        through="store.ProductSizeColor",
                        to="store.color",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Refunds",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reason", models.TextField(default="")),
                ("accepted", models.BooleanField(default=False)),
                ("email", models.EmailField(max_length=254)),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="store.order"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "phone_number",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True, max_length=128, region="NG"
                    ),
                ),
                ("country", models.CharField(blank=True, max_length=100, null=True)),
                ("otp", models.CharField(blank=True, max_length=6, null=True)),
                ("is_phone_verified", models.BooleanField(default=False)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="productsizecolor",
            name="size",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="size_product_colors",
                to="store.size",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="color",
            field=models.ManyToManyField(
                through="store.ProductSizeColor", to="store.color"
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="size",
            field=models.ManyToManyField(
                related_name="products",
                through="store.ProductSizeColor",
                to="store.size",
            ),
        ),
        migrations.CreateModel(
            name="Invoice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("invoice_number", models.CharField(max_length=50)),
                ("issued_at", models.DateTimeField(auto_now_add=True)),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="store.order"
                    ),
                ),
                (
                    "payment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="paystack_api.payment",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Inventory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField(default=1)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="store.product"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CartColor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField(default=1)),
                (
                    "cart",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="store.cart"
                    ),
                ),
                (
                    "color",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="store.color"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="cart",
            name="color",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="store.color",
            ),
        ),
        migrations.AddField(
            model_name="cart",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="product",
                to="store.product",
            ),
        ),
        migrations.AddField(
            model_name="cart",
            name="size",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="store.size",
            ),
        ),
        migrations.AddField(
            model_name="cart",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Wishlist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_key", models.CharField(blank=True, max_length=40, null=True)),
                ("added_at", models.DateTimeField(auto_now_add=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="store.product"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "product", "session_key")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="productsizecolor",
            unique_together={("product", "size", "color")},
        ),
        migrations.CreateModel(
            name="CustomerRating",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("headline", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "rating",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("review", models.TextField(blank=True, max_length=500, null=True)),
                ("date", models.DateTimeField(auto_now_add=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ratings",
                        to="store.product",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "product")},
            },
        ),
    ]
